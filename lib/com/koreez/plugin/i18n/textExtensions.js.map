{"version":3,"file":"textExtensions.js","sourceRoot":"","sources":["../../../../../src/com/koreez/plugin/i18n/textExtensions.ts"],"names":[],"mappings":"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","sourcesContent":["import i18next from \"i18next\";\n\nconst setText: (value: string) => any = function(value: string): any {\n    if (value !== this._i18nKey) {\n        this._i18nKey = value.toString() || \"\";\n    }\n    return this._setText(this._i18nKey);\n};\n\nconst interpolations: any = {\n    get(): any {\n        return this._interpolations;\n    },\n\n    set(value: any): void {\n        this._interpolations = value;\n        this.setText(this._i18nKey);\n    }\n};\n\nconst setTranslationParameter: (key: string, value: any) => void = function(key: string, value: any): void {\n    if (!this._interpolations) {\n        this._interpolations = {};\n    }\n    this._interpolations[key] = value;\n    this.setText(this._i18nKey);\n};\n\nconst clearTranslationParameter: (key: string) => void = function(key: string): void {\n    if (key in this._interpolations) {\n        delete this._interpolations[key];\n    }\n    this.setText(this._i18nKey);\n};\n\nconst commonExtend: (clazz: any, prop: string) => void = (clazz: any, prop: string): void => {\n    if (clazz.prototype.setText !== setText) {\n        clazz.prototype._setText = clazz.prototype.setText;\n\n        clazz.prototype.setText = setText;\n\n        Object.defineProperty(clazz.prototype, \"interpolations\", interpolations);\n\n        clazz.prototype.setTranslationParameter = setTranslationParameter;\n\n        clazz.prototype.clearTranslationParameter = clearTranslationParameter;\n    }\n\n    const creator: any = Phaser.GameObjects.GameObjectCreator;\n    if (creator) {\n        const textCreator: string = creator.prototype[prop];\n        if (textCreator) {\n            delete creator.prototype[prop];\n            creator.register(`_${prop}`, textCreator);\n            creator.register(prop, function(config: any, addToScene: boolean = false): Phaser.GameObjects.GameObject {\n                const _text: Phaser.GameObjects.GameObject = this.scene.make[`_${prop}`](config, addToScene);\n                (_text as any).interpolations = config.interpolations;\n                return _text;\n            });\n        }\n    }\n\n    const factory: any = Phaser.GameObjects.GameObjectFactory;\n    if (factory) {\n        const textFactory: string = factory.prototype[prop];\n        if (textFactory) {\n            delete factory.prototype[prop];\n            factory.register(`_${prop}`, textFactory);\n        }\n    }\n};\n\nconst textExtensions: any = {\n    extendText: () => {\n        const text: any = Phaser.GameObjects.Text;\n        if (text) {\n            commonExtend(text, \"text\");\n        }\n        const gameObjectFactory: any = Phaser.GameObjects.GameObjectFactory;\n        if (!gameObjectFactory) {\n            return;\n        }\n        gameObjectFactory.register(\"text\", function(\n            x: number,\n            y: number,\n            str: string,\n            style: any,\n            theInterpolations: any\n        ): Phaser.GameObjects.GameObject {\n            let txt = str\n            if(str !== \"\") { txt = i18next.t(str, theInterpolations) }\n            const aText: Phaser.GameObjects.GameObject = this.scene.add._text(x, y, txt, style);\n            return aText;\n        });\n    },\n\n    extendBitmapText: () => {\n        const bitmapText: any = Phaser.GameObjects.BitmapText;\n        if (bitmapText) {\n            commonExtend(bitmapText, \"bitmapText\");\n        }\n        const gameObjectFactory: any = Phaser.GameObjects.GameObjectFactory;\n        if (!gameObjectFactory) {\n            return;\n        }\n        gameObjectFactory.register(\"bitmapText\", function(\n            x: number,\n            y: number,\n            font: any,\n            str: string,\n            size: number,\n            theInterpolations: any\n        ): Phaser.GameObjects.GameObject {\n            let txt = str\n            if(str !== \"\") { txt = i18next.t(str, theInterpolations) }\n            const aText: Phaser.GameObjects.GameObject = this.scene.add._bitmapText(x, y, font, txt, size);\n            return aText;\n        });\n    },\n\n    extendDynamicBitmapText: () => {\n        const dynamicBitmapText: any = Phaser.GameObjects.DynamicBitmapText;\n        if (dynamicBitmapText) {\n            commonExtend(dynamicBitmapText, \"dynamicBitmapText\");\n        }\n        const gameObjectFactory: any = Phaser.GameObjects.GameObjectFactory;\n        if (!gameObjectFactory) {\n            return;\n        }\n        gameObjectFactory.register(\"dynamicBitmapText\", function(\n            x: number,\n            y: number,\n            font: any,\n            str: string,\n            size: number,\n            theInterpolations: any\n        ): Phaser.GameObjects.GameObject {\n            let txt = str\n            if(str !== \"\") { txt = i18next.t(str, theInterpolations) }\n            const aText: Phaser.GameObjects.GameObject = this.scene.add._dynamicBitmapText(x, y, font, txt, size);\n            return aText;\n        });\n    }\n};\n\nexport default textExtensions;\n"]}