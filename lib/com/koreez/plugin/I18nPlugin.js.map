{"version":3,"file":"I18nPlugin.js","sourceRoot":"","sources":["../../../../src/com/koreez/plugin/I18nPlugin.ts"],"names":[],"mappings":"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","sourcesContent":["import i18next from \"i18next\";\nimport { Ii18n } from \"./i18n/Ii18n\";\nimport textExtensions from \"./i18n/textExtensions\";\n\nexport class I18nPlugin extends Phaser.Plugins.ScenePlugin implements Ii18n {\n    public static staticConstructor(): any {\n        textExtensions.extendText();\n\n        textExtensions.extendBitmapText();\n\n        textExtensions.extendDynamicBitmapText();\n    }\n\n    public get modules(): i18next.Modules {\n        return i18next.modules;\n    }\n\n    public get services(): i18next.Services {\n        return i18next.services;\n    }\n\n    private languageChangedBound: any;\n\n    //  Called when the Plugin is booted by the PluginManager.\n    //  If you need to reference other systems in the Scene (like the Loader or DisplayList) then set-up those references now, not in the constructor.\n    public boot(): void {\n        const eventEmitter: Phaser.Events.EventEmitter = this.systems.events;\n\n        //  Listening to the following events is entirely optional, although we would recommend cleanly shutting down and destroying at least.\n        //  If you don't need any of these events then remove the listeners and the relevant methods too.\n\n        eventEmitter.on(\"shutdown\", this.shutdown, this);\n        eventEmitter.on(\"shutdown\", this.shutdown, this);\n        this.languageChangedBound = this.languageChanged.bind(this);\n        this.on(\"languageChanged\", this.languageChangedBound);\n    }\n\n    /**\n     * @param options - Initial options.\n     * @param callback - will be called after all translations were loaded or with an error when failed (in case of using a backend).\n     */\n    public initialize(options: any, callback?: i18next.Callback): Promise<i18next.TFunction> {\n        if (options) {\n            return i18next.init(options, callback);\n        }\n        return i18next.init(callback);\n    }\n\n    /**\n     * The use function is there to load additional plugins to i18next.\n     * For available module see the plugins page and don't forget to read the documentation of the plugin.\n     */\n    public use(module: any): i18next.i18n {\n        return i18next.use(module);\n    }\n\n    public t<\n        TResult extends string | object | Array<string | object> | undefined = string,\n        TKeys extends string = string,\n        TValues extends object = object\n    >(key: TKeys | TKeys[], options?: i18next.TOptions<TValues>): TResult {\n        return i18next.t(key, options);\n    }\n\n    public exists(key: string | string[], options?: i18next.InterpolationOptions): boolean {\n        return i18next.exists(key, options);\n    }\n\n    public loadResources(callback?: (err: any) => void): void {\n        i18next.loadResources(callback);\n    }\n\n    public createInstance(options?: i18next.InitOptions, callback?: i18next.Callback): i18next.i18n {\n        return i18next.createInstance(options, callback);\n    }\n\n    public cloneInstance(options?: i18next.InitOptions, callback?: i18next.Callback): i18next.i18n {\n        return i18next.cloneInstance(options, callback);\n    }\n\n    /**\n     * Returns a t function that defaults to given language or namespace.\n     * Both params could be arrays of languages or namespaces and will be treated as fallbacks in that case.\n     * On the returned function you can like in the t function override the languages or namespaces by passing them in options or by prepending namespace.\n     */\n    public getFixedT(lng: string | string[], ns?: string | string[]): i18next.TFunction {\n        return i18next.getFixedT(lng, ns);\n    }\n\n    /**\n     * Changes the language. The callback will be called as soon translations were loaded or an error occurs while loading.\n     * HINT: For easy testing - setting lng to 'cimode' will set t function to always return the key.\n     */\n    public changeLanguage(lng: string, callback?: i18next.Callback): Promise<i18next.TFunction> {\n        return i18next.changeLanguage(lng, callback);\n    }\n\n    /**\n     * Is set to the current detected or set language.\n     * If you need the primary used language depending on your configuration (whilelist, load) you will prefer using i18next.languages[0].\n     */\n    public get language(): string {\n        return i18next.language;\n    }\n\n    /**\n     * Is set to an array of language-codes that will be used it order to lookup the translation value.\n     */\n    public get languages(): string[] {\n        return i18next.languages;\n    }\n\n    /**\n     * Loads additional namespaces not defined in init options.\n     */\n    public loadNamespaces(ns: string | string[], callback: i18next.Callback): Promise<void> {\n        return i18next.loadNamespaces(ns, callback);\n    }\n\n    /**\n     * Loads additional languages not defined in init options (preload).\n     */\n    public loadLanguages(lngs: string | string[], callback: i18next.Callback): Promise<void> {\n        return i18next.loadLanguages(lngs, callback);\n    }\n\n    /**\n     * Reloads resources on given state. Optionally you can pass an array of languages and namespaces as params if you don't want to reload all.\n     */\n    public reloadResources(lngs?: string[], ns?: string[]): Promise<void> {\n        return i18next.reloadResources(lngs, ns);\n    }\n\n    /**\n     * Changes the default namespace.\n     */\n    public setDefaultNamespace(ns: string): void {\n        i18next.setDefaultNamespace(ns);\n    }\n\n    /**\n     * Returns rtl or ltr depending on languages read direction.\n     */\n    public dir(lng?: string): \"ltr\" | \"rtl\" {\n        return i18next.dir(lng);\n    }\n\n    /**\n     * Exposes interpolation.format function added on init.\n     */\n    public get format(): i18next.FormatFunction {\n        return i18next.format;\n    }\n\n    /**\n     * Event listener\n     */\n    public on(event: string, listener: (...args: any[]) => void): void {\n        i18next.on(event, listener);\n    }\n\n    /**\n     * Remove event listener\n     */\n    public off(event: string, listener: (...args: any[]) => void): void {\n        i18next.off(event, listener);\n    }\n\n    /**\n     * Gets one value by given key.\n     */\n    public getResource(\n        lng: string,\n        ns: string,\n        key: string,\n        options?: {\n            keySeparator?: string;\n        }\n    ): any {\n        i18next.getResource(lng, ns, key, options);\n    }\n\n    /**\n     * Adds one key/value.\n     */\n    public addResource(\n        lng: string,\n        ns: string,\n        key: string,\n        value: string,\n        options?: {\n            keySeparator?: string;\n            silent?: boolean;\n        }\n    ): void {\n        i18next.addResource(lng, ns, key, value, options);\n    }\n\n    /**\n     * Adds multiple key/values.\n     */\n    public addResources(lng: string, ns: string, resources: any): void {\n        i18next.addResources(lng, ns, resources);\n    }\n\n    /**\n     * Adds a complete bundle.\n     * Setting deep param to true will extend existing translations in that file.\n     * Setting overwrite to true it will overwrite existing translations in that file.\n     */\n    public addResourceBundle(lng: string, ns: string, resources: any, deep?: boolean, overwrite?: boolean): void {\n        i18next.addResourceBundle(lng, ns, resources, deep, overwrite);\n    }\n\n    /**\n     * Checks if a resource bundle exists.\n     */\n    public hasResourceBundle(lng: string, ns: string): boolean {\n        return i18next.hasResourceBundle(lng, ns);\n    }\n\n    /**\n     * Returns a resource bundle.\n     */\n    public getResourceBundle(lng: string, ns: string): any {\n        return i18next.getResourceBundle(lng, ns);\n    }\n\n    /**\n     * Removes an existing bundle.\n     */\n    public removeResourceBundle(lng: string, ns: string): void {\n        i18next.removeResourceBundle(lng, ns);\n    }\n\n    /**\n     * Current options\n     */\n    public get options(): i18next.InitOptions {\n        return i18next.options;\n    }\n\n    /**\n     * Is initialized\n     */\n    public get isInitialized(): boolean {\n        return i18next.isInitialized;\n    }\n\n    public recursiveUpdateText(obj: any): void {\n        if (\n            obj instanceof Phaser.GameObjects.Text ||\n            obj instanceof Phaser.GameObjects.BitmapText ||\n            obj instanceof Phaser.GameObjects.DynamicBitmapText\n        ) {\n            (obj as any).setText((obj as any)._i18nKey);\n            return;\n        }\n        if (obj instanceof Phaser.GameObjects.Container) {\n            obj.list.forEach((child: any) => {\n                this.recursiveUpdateText(child);\n            });\n            return;\n        }\n\n        if (obj.children && obj.children.length > 0) {\n            obj.children.each((child: any) => {\n                this.recursiveUpdateText(child);\n            });\n        }\n    }\n\n    private shutdown(): void {\n        this.off(\"languageChanged\", this.languageChangedBound);\n        const eventEmitter: Phaser.Events.EventEmitter = this.systems.events;\n        eventEmitter.off(\"shutdown\", this.shutdown, this, false);\n        eventEmitter.off(\"shutdown\", this.shutdown, this, false);\n        this.scene = null;\n    }\n\n    private languageChanged(): void {\n        this.recursiveUpdateText(this.scene);\n    }\n}\n\nI18nPlugin.staticConstructor();\n"]}